<?php

use Drupal\comuni_module\Controller\ThemeController;

/* SUGGESTION per aggiungere "view_mode" alle taxonomy */
function comuni_theme_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
	$term = $variables['elements']['#taxonomy_term'];
	$sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
	// Add view mode theme suggestions.
	$suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
	$suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
	//$suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
}

/*
function comuni_module_preprocess_block(&$vars)
{
    if ($vars['plugin_id'] == 'system_breadcrumb_block') {
        $vars['content']['#cache']['max-age'] = 0;
    }
}*/

/*
function comuni_module_preprocess_esplora(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $variables['title'] = $node->title->value;
  }
}*/

/*
function comuni_module_preprocess_breadcrumb(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $nid = $node->id();
    $contentType = $node->bundle();
    $variables['contentType'] = $contentType;
  }
  $taxonomy = \Drupal::routeMatch()->getParameter('taxonomy_term');
  if ($taxonomy instanceof \Drupal\taxonomy\TermInterface) {
    $variables['contentType'] = 'taxonomy';
    $path = \Drupal::service('path.current')->getPath();
    $alias = \Drupal::service('path_alias.manager')->getAliasByPath($path);
    $aliasSplit = explode("/", $alias);

    $variables['pageTaxName'] = ucfirst(str_replace('-', ' ', $aliasSplit[1]));
    $variables['pageTaxUrl'] = '/' . $aliasSplit[1];
  }
}*/

/*
function comuni_theme_theme_suggestions_block_alter(array &$suggestions, array $variables)
{
	$element_id = $region_suggestion = $page_suggestion = '';
	
	if ($current_path = (Drupal::service('path.current')->getPath())) {
		$parts = explode('/', $current_path);
		$page_suggestion = 'page';
		foreach ($parts as $part) {
			$page_suggestion .= '_'.$part;
		}
		$page_suggestion = str_replace('-', '_', $page_suggestion);
	}

	if ($variables['theme_hook_original'] == 'block' && !empty($variables['elements']['#id'])) {
		$block = \Drupal\block\Entity\Block::load($variables['elements']['#id']);
		$region = $block->getRegion();
		$regionParts = explode('_', $region);
		array_pop($regionParts);
		if ($regionParts) {
			$region_suggestion = '__' . implode('_', $regionParts) . '__' . $variables['elements']['#id'];
		}
	}

	$element_id = (@$variables['elements']['#id'] ? $variables['elements']['#id'] : (@$variables['element']['#id'] ? $variables['element']['#id'] : ''));

	if ($element_id && $page_suggestion && !in_array($variables['theme_hook_original'] . '__' . implode('__', array_filter(array($element_id, $region_suggestion, $page_suggestion))), $suggestions)){
		$new_suggestion = $variables['theme_hook_original'] . '__' . implode('__', array_filter(array($element_id, $region_suggestion, $page_suggestion)));
		$suggestions[] = preg_replace('/\d+/', '%', $new_suggestion);
	}

	if ($element_id && $region_suggestion && !in_array($variables['theme_hook_original'] . '__'	. implode('__',	array_filter(array($element_id,	$region_suggestion)), $suggestions))){
		$new_suggestion = $variables['theme_hook_original'] . '__' . implode('__', array_filter(array($element_id, $region_suggestion)));
		$suggestions[] = preg_replace('/\d+/', '%', $new_suggestion);
	}

	if ($element_id && !in_array($variables['theme_hook_original'] . '__' . implode('__', array_filter(array($element_id))), $suggestions)){
		$new_suggestion = $variables['theme_hook_original'] . '__' . implode('__', array_filter(array($element_id)));
		$suggestions[] = preg_replace('/\d+/', '%', $new_suggestion);
	}
}*/
